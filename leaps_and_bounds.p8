pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- leaps and bounds:
-- a squirrel game
-- by matt phillips
-- introspection games
-- game off 2019

-- globals
local cam_x, cam_y, dt, game_objects, gravity, map_x, map_y, collided

function _init()
    dt = null
    game_objects = {}
    gravity = 1
    cam_x = 60
    cam_y = 60
    map_x, map_y = 0, 0
    make_player('player', 20, 20)
end

function _update()
    -- update dt value
    if(dt == null) do
        local target_fps = stat(8)
        dt = 1 / target_fps
    end
    -- update all game objects
    local obj
    for obj in all(game_objects) do
        obj:update()
    end
end

function _draw()
    cls()
    -- draw the map
    map(map_x, map_y, 0, 0, 16, 16)
    -- draw all game objects
    local obj
    for obj in all(game_objects) do
        obj:draw()
    end
end

-- function that makes the player
function make_player(name, x, y)
    local props 
    props = {
        width = 12,
        height = 12,
        jump_accel = 100,
        velocity_x = 0,
        velocity_y = 0,
        max_velocity_x = 4,
        min_velocity_x = -4,
        max_velocity_x_jumping = 1.5,
        min_velocity_x_jumping = -1.5,
        min_velocity_y = -8,
        max_velocity_y = 8,
        accel = 50,
        friction = 0.7,
        move_x = 0,
        move_y = 0,
        grounded = false,
        jumping = false,
        jump_frame = 0,
        max_jump_frames = 5,
        max_jump_height = 16,
        jump_start_y = 0,
        can_move = true,
        moving = false,
        update = function(self)
            -- calculate x velocity
            if self.can_move then
                -- get jump input
                if btn(4) or btn(5) then
                    if self.jump_frame == 0 and self.grounded then
                        self.grounded = false
                        self.jumping = true
                        self.jump_start_y = self.y
                        self.jump_frame += 1
                        self.velocity_y += ((self.jump_accel) * dt) * - 1
                    elseif self.jump_frame <= self.max_jump_frames and self.jumping and (self.y >= self.jump_start_y - self.max_jump_height) then
                        self.jump_frame += 1
                        self.velocity_y += ((self.jump_accel) * dt) * - 1
                    else
                        self.jumping = false
                        self.jump_frame = 0
                    end
                else
                    self.jumping = false
                    self.jump_frame = 0
                end

                -- get x input
                if btn(0) then
                    self.moving = true
                    self.velocity_x += ((self.accel) * dt) * - 1
                    self.facing_left = true
				end
                if btn(1) then
                    self.moving = true
                    self.velocity_x += ((self.accel) * dt)
                    self.facing_left = false
				end
            end
            if not btn(0) and not btn(1) then
                self.moving = false
            end

            -- apply friction
            if self.velocity_x > 1 then
                self.velocity_x -= self.friction
            elseif self.velocity_x < -1 then
                self.velocity_x += self.friction
            elseif self.velocity_x > -1 and self.velocity_x < 1 and not self.moving then
                self.velocity_x = 0
            end

            -- apply gravity
            if self.grounded then
                self.velocity_y = 0
            else
                self.velocity_y += gravity
            end

            -- limit x velocity
            self.velocity_x = mid(self.min_velocity_x, self.velocity_x, self.max_velocity_x)
            -- limit y velocity
            self.velocity_y = mid(self.min_velocity_y, self.velocity_y, self.max_velocity_y)

            -- update position
            local new_x, new_y
            new_x = self.x + self.velocity_x
            new_y = self.y + self.velocity_y

            -- check for collisions
            local hit_head
            altered_x, self.y, self.grounded, hit_head = check_collision(new_x, new_y, self.width, self.height, 1)
            if new_x == altered_x then
                self.x = new_x
            end
            
            -- handle head bumping
            if hit_head then
                self.velocity_y = 0
                self.jumping = false
            end
            
        end,
        draw = function(self)
            sspr(0, 0, 24, 16, self.x, self.y)
            print(self.velocity_x)
            print(self.velocity_y)
            print(self.grounded)       
        end
    }
    make_game_object(name, x, y, props)
end

-- function that makes game objects
function make_game_object(name, x, y, props)
    local obj
    obj = {
        name=name,
        x=x,
        y=y,
        velocity_x=0,
        velocity_y=0,
        update=function(self)
        end,
        draw=function(self)
        end
    }
    if not(props == nil) then
        local k, v
        for k, v in pairs(props) do
            obj[k] = v
        end
    end
    add(game_objects, obj)
end

-- function that checks wall collision
-- TODO work through this to make it work with variable sizes
function check_collision(x, y, w, h, flag)
    local up = {x + (w / 2), y}
    local down = {x + (w / 2), y + h} 
    local left = {x, y + (h / 2)}
    local right = {x + h, y + (h / 2)}
    local up_map_tile = mget(flr(up[1]/8) + map_x, flr(up[2]/8) + map_y)
    local down_map_tile = mget(flr(down[1]/8) + map_x, flr(down[2]/8) + map_y)
    local left_map_tile = mget(flr(left[1]/8) + map_x, flr(left[2]/8) + map_y)
    local right_map_tile = mget(flr(right[1]/8) + map_x, flr(right[2]/8) + map_y)
    if fget(up_map_tile, flag) then
        local tx, ty = map_tile_to_coords(flr(up[1]/8), flr(up[2]/8))
        y = ty + h
    end
    if fget(down_map_tile, flag) then
        collided = true
        local tx, ty = map_tile_to_coords(flr(down[1]/8), flr(down[2]/8))
        y = ty - h
    end
    if fget(left_map_tile, flag) then
        local tx, ty = map_tile_to_coords(flr(left[1]/8), flr(left[2]/8))
        x = tx + w
    end
    if fget(right_map_tile, flag) then
        local tx, ty = map_tile_to_coords(flr(right[1]/8), flr(right[2]/8))
        x = tx - w
    end
    return x, y, fget(down_map_tile, flag), fget(up_map_tile, flag)
end

function map_tile_to_coords(gx, gy)
    return (gx * 8), (gy * 8)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000055000000005000000000000000000000005000000000000000000000000000000005550000000000000000000065500000000000000000000000000000
00000655500000005550000000055500000000005550000055500000000000500000000065550000000000000000000655500000000000000000000000000000
00000665500055555555000000065550000055555555000066550000000000555000000065500000005000000000000650000005000000000000000000000000
00000066505555556660000000066650555555556660000006665055555555555500000065505555005550000000000650000005550000000000000000000000
00000006655556666000000000000665555566666000000000066555555555666000000006555555555555000000000050555555555000000000000000000000
00000000005666006000000000000000556660000600000000000056666666600000000000006665556660000000000005555556660000000000000000000000
00000000006600000000000000000006660000000000000000000666000000060000000000000600666000000000000000566666000000000000000000000000
00000000066000000000000000000006000000000000000000000000000000000000000000000600006000000000000000660006000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
30300300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34443434000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
54444445000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44544444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
45444454000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000008080808080808080808080800080808080000000000000000000000000000000000000000000000080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000808080000080808080808000000000000000000000000000808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
